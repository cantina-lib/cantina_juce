cmake_minimum_required(VERSION 3.15)

project(cantina_lv2)

set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/modules/cmake)
set(CANTINA_LV2_SOURCE_DIR ${PROJECT_SOURCE_DIR}/source)
set(CANTINA_LV2_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include)
set(CANTINA_LV2_DATA_DIR ${PROJECT_SOURCE_DIR}/data)
set(CANTINA_LV2_SCHEMA_DIR ${PROJECT_SOURCE_DIR}/third_party/schemas)

set(CANTINA_LV2_PLUGIN_NAME "cantina.lv2")


set(CANTINA_LV2_OUTPUT_PATH ${PROJECT_BINARY_DIR}/${CANTINA_LV2_PLUGIN_NAME})

set(CANTINA_LV2_INCLUDES
        ${CANTINA_LV2_INCLUDE_DIR}/cantina_plugin.hpp
)
set(CANTINA_LV2_SOURCES
        ${CANTINA_LV2_SOURCE_DIR}/cantina_plugin.cpp
)
set(CANTINA_LV2_FILES
        ${CANTINA_LV2_SOURCES}
        ${CANTINA_LV2_INCLUDES}
        )

set(CANTINA_LV2_TTL_TEMPLATES
        ${CANTINA_LV2_DATA_DIR}/manifest.ttl.in
        ${CANTINA_LV2_DATA_DIR}/cantina.ttl.in
        )
include(LV2Utils)

lv2_add_plugin(
        NAME ${CANTINA_LV2_PLUGIN_NAME}
        TTL_TEMPLATES ${CANTINA_LV2_TTL_TEMPLATES}
        OUTPUT_TTL CANTINA_LV2_TTL_FILES
        OUTPUT_PATH ${CANTINA_LV2_OUTPUT_PATH}
        SCHEMA_DIR ${CANTINA_LV2_SCHEMA_DIR}
        URI ${CANTINA_URI}
        HOME ${CANTINA_HOME}
        )

target_sources(${CANTINA_LV2_PLUGIN_NAME} PUBLIC ${CANTINA_LV2_FILES})
target_include_directories(${CANTINA_LV2_PLUGIN_NAME} PUBLIC ${CANTINA_LV2_INCLUDE_DIR})

# no special flags for this one, since it's mess.
target_compile_options(${CANTINA_LV2_PLUGIN_NAME} PRIVATE "")# ${CANTINA_CXX_FLAGS})
target_compile_features(${CANTINA_LV2_PLUGIN_NAME} PRIVATE ${CANTINA_CXX_STANDARD})

target_link_libraries(${CANTINA_LV2_PLUGIN_NAME} PUBLIC ${CANTINA_LIBRARIES})
lv2_install_plugin(NAME ${CANTINA_LV2_PLUGIN_NAME} TTL_FILES ${CANTINA_LV2_TTL_FILES} INCLUDES ${CANTINA_LV2_INCLUDES})
